on:
  workflow_dispatch:  # Trigger workflow manually from GitHub UI

name: Integration Tests

jobs:
  ## Integration tests ##
  integration-rattler:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    name: Test on ${{ matrix.test-directory }}
    strategy:
      fail-fast: false
      matrix:
        test-directory:
          - anaconda_recipes_01  # Only one directory for now
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: conda-incubator/conda-recipe-manager-test-data
          path: test_data
          sparse-checkout: recipes_v0/${{ matrix.test-directory }}

      - uses: ./.github/actions/setup-env
        with:
          python-version: "3.11"

      - name: Convert recipes and full rattler-build
        run: |
          source $CONDA/bin/activate
          conda activate conda-recipe-manager
          conda install -y -c conda-forge rattler-build
          mkdir -p logs
          set -o pipefail
          export PREFIX=""
          export RECIPE_DIR=""
          echo "Loading allow-list from integration_build_test_config.json"
          ALLOW_LIST=$(cat integration_build_test_config.json | jq -r '.v0_test_files[]')
          echo "$ALLOW_LIST" > allow_list.txt
          
          while read -r recipe; do
            echo "Processing recipe: $recipe"
            crm convert "$recipe" --output recipe.yaml | tee -a logs/convert.log
            rattler-build build recipe.yaml | tee -a logs/build.log || echo "Build failed for $recipe" >> logs/failed_recipes.log
          done < allow_list.txt

      - uses: actions/upload-artifact@v4
        with:
          name: integration-logs-${{ matrix.test-directory }}
          path: logs/*.log

  integration-final-results:
    runs-on: ubuntu-latest
    needs: [integration-rattler]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          python-version: "3.11"
      - name: Make artifact directory
        run: mkdir -p logs
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: logs/
      - name: Integration Testing Report
        run: |
          source $CONDA/bin/activate
          conda activate conda-recipe-manager
          set -o pipefail
          scripts/parse_ci_output.py logs/ | tee report.json
          echo -e "Integration Report:\n\`\`\`json\n" >> ${GITHUB_STEP_SUMMARY}
          cat report.json >> ${GITHUB_STEP_SUMMARY}
          echo -e "\n\`\`\`" >> ${GITHUB_STEP_SUMMARY}
